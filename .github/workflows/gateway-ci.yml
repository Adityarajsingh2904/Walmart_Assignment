name: API Gateway CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm --filter api-gateway lint --max-warnings 0

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile
      - name: Run tests
        run: pnpm --filter api-gateway test -- --coverage.reporter=json-summary
      - name: Fail if coverage < 80 %
        run: |
          pct=$(jq '.total.lines.pct' api-gateway/coverage/coverage-summary.json)
          echo "coverage=$pct"
          [ "$(printf '%.0f' "$pct")" -ge 80 ] || { echo "Coverage < 80%"; exit 1; }

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./api-gateway
          file: ./api-gateway/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/api-gateway:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
