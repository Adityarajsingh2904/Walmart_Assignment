name: Deploy Prod

on:
  push:
    branches: [main]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  setup-aws:
    runs-on: ubuntu-latest
    needs: checkout
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

  terraform-init-plan:
    runs-on: ubuntu-latest
    needs: setup-aws
    steps:
      - uses: actions/checkout@v4
      - name: Terraform Init
        run: |
          cd deployment/terraform/production
          terraform init -backend-config=${{ secrets.TF_BACKEND_CONFIG }}
      - name: Terraform Plan
        run: |
          cd deployment/terraform/production
          terraform plan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-init-plan
    steps:
      - uses: actions/checkout@v4
      - name: Apply Terraform
        run: |
          cd deployment/terraform/production
          terraform apply -auto-approve

  docker-build-push:
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - uses: actions/checkout@v4
      - name: Build API image
        run: docker build -t trustvault-api:latest ./api
      - name: Build UI image
        run: docker build -t trustvault-ui:latest ./ui
      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
      - name: Push images
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/trustvault-api:latest
          docker push ${{ secrets.ECR_REGISTRY }}/trustvault-ui:latest

  helm-upgrade:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - uses: actions/checkout@v4
      - name: Helm upgrade
        run: helm upgrade trustvault chart/ --namespace prod --install --wait --set image.tag=latest

  health-check:
    runs-on: ubuntu-latest
    needs: helm-upgrade
    steps:
      - uses: actions/checkout@v4
      - name: Wait for rollout
        run: kubectl rollout status deployment/trustvault -n prod
      - name: Run probe
        run: ./scripts/probe.sh prod
      - name: Rollback on failure
        if: failure()
        run: helm rollback trustvault --namespace prod
      - name: Slack notify success
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {"text":"Production deployment succeeded"}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Slack notify failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {"text":"Production deployment failed"}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

